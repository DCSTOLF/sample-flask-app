# This is a basic workflow to help you get started with Actions

name: Non-Prod

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
      branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!main'     # excludes main


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job to manage VDB and SelfService container life-cycle
  manage_vdbs:
    environment:
      name: delphix-engine
    env:
      APP_PREFIX: ${{ secrets.APP_PREFIX }}
      DELPHIX_TARGET_CDB: ${{ secrets.DELPHIX_TARGET_CDB }}
      DELPHIX_TARGET_ENVIRONMENT: ${{ secrets.DELPHIX_TARGET_ENVIRONMENT }}
      DELPHIX_TARGET_INSTANCE: ${{ secrets.DELPHIX_TARGET_INSTANCE }} 
      DELPHIX_VDB_GROUP: ${{ secrets.DELPHIX_VDB_GROUP }}
      DELPHIX_CONTAINER_OWNER: ${{ secrets.DELPHIX_CONTAINER_OWNER }}
      DXTOOLS_CONF: ${{ secrets.DXTOOLS_CONF }}
      DELPHIX_DSOURCE_LIST: ${{ secrets.DELPHIX_DSOURCE_LIST }}
      CI_ROLLBACK: ${{ secrets.CI_ROLLBACK }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: delphix/dxtoolkit:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Set dxtools.conf
        run: |
          mkdir /config
          echo $DXTOOLS_CONF | base64 -d > /config/dxtools.conf

      - name: Test connection to Delphix
        run: |
          dx_get_users > /dev/null
          echo GITHUB_REF: ${GITHUB_REF}
          echo GITHUB_RUN_ID: ${GITHUB_RUN_ID}

      - name: Disable Self Service Container
        run: |
          APP_PREFIX_UPPER=$(echo $APP_PREFIX | tr '[a-z]' '[A-Z]')
          echo APP_PREFIX: $APP_PREFIX_UPPER
          echo GITHUB_REF: $GITHUB_REF
          TEMP=$(echo ${GITHUB_REF} | rev | cut -d/ -f1 | rev | sed 's/-/_/g')
          VDB_NAME=v$(echo ${TEMP} | cut -c1-7 ) 
          DELPHIX_DSOURCE_GROUP=$(echo ${DELPHIX_DSOURCE_LIST} | cut -d : -f 1)
          DELPHIX_DSOURCE_NAME=$(echo ${DELPHIX_DSOURCE_LIST} | cut -d : -f 2)
          
          dx_ctl_js_container -action disable -container_name $GITHUB_REF